"Sony Alpha a5100 (ILCE-5100L)",
"Panasonic Lumix DMC-G7 14-42",
"Sony Alpha a7 II (ILCE-7M2)",
"Panasonic Lumix DMC-G80",
"Panasonic Lumix DMC-GX80",
"Sony Alpha a6300 (ILCE-6300L)",
"Panasonic Lumix DMC-GX800K",
"Panasonic Lumix DMC-G7",
"Sony Alpha a7K - ILCE-7K"
)
install.packages("MCDA")
colnames ( performanceTable ) <- c (
" Rzodzielczosc " ,
" Zakres czulosci " ,
" Cena " )
# szeregi alternatyw
alternativesRanks  <- C ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12)
rownames(performanceTable) <- c(
"Sony Alpha a6000 (ILCE-6000LB)",
"Fujifilm X-A10",
"Panasonic DC-GH5S",
"Sony Alpha a5100 (ILCE-5100L)",
"Panasonic Lumix DMC-G7 14-42",
"Sony Alpha a7 II (ILCE-7M2)",
"Panasonic Lumix DMC-G80",
"Panasonic Lumix DMC-GX80",
"Sony Alpha a6300 (ILCE-6300L)",
"Panasonic Lumix DMC-GX800K",
"Panasonic Lumix DMC-G7",
"Sony Alpha a7K - ILCE-7K"
)
colnames(performanceTable) <- c(
colnames(t)
)
nazwy ( alternativesRanks ) <- row.names ( performanceTable )
# the performance table
performanceTable <- rbind(
+     c(9, 1400, 2649),
+     c(13, 1400, 2699),
+     c(6.5, 1200, 1599),
+     c(6, 1000, 899),
+     c(5, 1000, 799),
+     c(7, 1200, 1399),
+     c(5, 1200, 1299),
+     c(6, 1000, 1099),
+     c(6, 1200, 1549),
+     c(6, 1200, 1099),
+     c(6, 1000, 799),
+     c(6, 1000, 999),
+     c(6, 1200, 1399),
+     c(6, 1000, 1249),
+     c(7, 1200, 1299),
+     c(6, 1200, 1799),
+     c(6, 1200, 1399),
+     c(5, 1000, 1199),
+     c(6, 1200, 1059),
+     c(9, 1400, 3499)
+ )
rownames(performanceTable) <- c(
"Samsung Addwash WW90K6414QW",
"Hoover DMP 413AH",
"Bosch Serie 6 VarioPerfect WLT24460PL",
"Indesit IWSC 51052 C ECO PL",
"Amica AWB510L",
"Candy Smart CS4 1061D3",
"Samsung WF70F5E0W2W",
"Bosch Serie 4 VarioPerfect WLG2426KPL",
"Bosch Serie 2 VarioPerfect WAB20264PL",
"Electrolux EWS1266CI",
"Samsung WW60J3283LW",
"Indesit IWSC 61253 C ECO EU",
"Indesit Eco Time IWD 61052 C ECO PL",
"Whirlpool AWO/C 61003P",
"Bosch Serie 6 VarioPerfect WLK2427EPL",
"Electrolux EWS11064SDU",
"Samsung AddWash Slim WW60K42138W",
"Samsung WW60J42602W",
"Bosch Serie 4 VarioPerfect WLG2026EPL",
"Amica Navigator AWX612D")
rownames(performanceTable) <- c(
"Samsung Addwash WW90K6414QW",
"Hoover DMP 413AH",
"Bosch Serie 6 VarioPerfect WLT24460PL",
"Indesit IWSC 51052 C ECO PL",
"Amica AWB510L",
"Candy Smart CS4 1061D3",
"Samsung WF70F5E0W2W",
"Bosch Serie 4 VarioPerfect WLG2426KPL",
"Bosch Serie 2 VarioPerfect WAB20264PL",
"Electrolux EWS1266CI",
"Samsung WW60J3283LW",
"Indesit IWSC 61253 C ECO EU",
"Indesit Eco Time IWD 61052 C ECO PL",
"Whirlpool AWO/C 61003P",
"Bosch Serie 6 VarioPerfect WLK2427EPL",
"Electrolux EWS11064SDU",
"Samsung AddWash Slim WW60K42138W",
"Samsung WW60J42602W",
"Bosch Serie 4 VarioPerfect WLG2026EPL",
"Amica Navigator AWX612D")
install.packages("MCDA")
install.packages("MCDA")
library(MCDA)
epsilon <-0.01
# the performance table
performanceTable <- rbind(
c(9, 1400, 2649),
c(13, 1400, 2699),
c(6.5, 1200, 1599),
c(6, 1000, 899),
c(5, 1000, 799),
c(7, 1200, 1399),
c(5, 1200, 1299),
c(6, 1000, 1099),
c(6, 1200, 1549),
c(6, 1200, 1099),
c(6, 1000, 799),
c(6, 1000, 999),
c(6, 1200, 1399),
c(6, 1000, 1249),
c(7, 1200, 1299),
c(6, 1200, 1799),
c(6, 1200, 1399),
c(5, 1000, 1199),
c(6, 1200, 1059),
c(9, 1400, 3499)
)
rownames(performanceTable) <- c(
"Samsung Addwash WW90K6414QW",
"Hoover DMP 413AH",
"Bosch Serie 6 VarioPerfect WLT24460PL",
"Indesit IWSC 51052 C ECO PL",
"Amica AWB510L",
"Candy Smart CS4 1061D3",
"Samsung WF70F5E0W2W",
"Bosch Serie 4 VarioPerfect WLG2426KPL",
"Bosch Serie 2 VarioPerfect WAB20264PL",
"Electrolux EWS1266CI",
"Samsung WW60J3283LW",
"Indesit IWSC 61253 C ECO EU",
"Indesit Eco Time IWD 61052 C ECO PL",
"Whirlpool AWO/C 61003P",
"Bosch Serie 6 VarioPerfect WLK2427EPL",
"Electrolux EWS11064SDU",
"Samsung AddWash Slim WW60K42138W",
"Samsung WW60J42602W",
"Bosch Serie 4 VarioPerfect WLG2026EPL",
"Amica Navigator AWX612D")
colnames(performanceTable) <- c(
"MaximumLoad",
"RPM",
"Price")
# ranks of the alternatives
alternativesRanks <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)
names(alternativesRanks) <- row.names(performanceTable)
# criteria to minimize or maximize
criteriaMinMax <- c("max","max","min")
names(criteriaMinMax) <- colnames(performanceTable)
x<-additiveValueFunctionElicitation(performanceTable, criteriaMinMax, epsilon,
alternativesRanks = alternativesRanks)
# the performance table
performanceTable <- rbind(
t
)
rownames(performanceTable) <- c(
install.packages("MCDA")
install.packages("MCDA")
"Sony Alpha a6000 (ILCE-6000LB)",
"Fujifilm X-A10",
"Panasonic DC-GH5S",
"Sony Alpha a5100 (ILCE-5100L)",
"Panasonic Lumix DMC-G7 14-42",
"Sony Alpha a7 II (ILCE-7M2)",
"Panasonic Lumix DMC-G80",
"Panasonic Lumix DMC-GX80",
"Sony Alpha a6300 (ILCE-6300L)",
"Panasonic Lumix DMC-GX800K",
"Panasonic Lumix DMC-G7",
"Sony Alpha a7K - ILCE-7K"
# the performance table
performanceTable <- rbind(
t
)
# the performance table
performanceTable <- rbind(
c(24.3,100-25600,2499),
c(16.3,100-25600,1739),
c(10.2,160-51200,10199),
c(24.3,100-25600,1999),
c(16.0,200-25600,2499),
c(24.3,100-25600,4999),
c(16.0,200-25600,3849),
c(16.0,200-25600,2449),
c(24.2,100-51200,4399),
c(18.84,100-25600,1699),
c(16.0,200-25600,2499),
c(24.3,100-25600,3495)
)
install.packages("MCDA")
# the performance table
performanceTable <- rbind(
c(24.3,100-25600,2499),
c(16.3,100-25600,1739),
c(10.2,160-51200,10199),
c(24.3,100-25600,1999),
c(16.0,200-25600,2499),
c(24.3,100-25600,4999),
c(16.0,200-25600,3849),
c(16.0,200-25600,2449),
c(24.2,100-51200,4399),
c(18.84,100-25600,1699),
c(16.0,200-25600,2499),
c(24.3,100-25600,3495)
)
install.packages("MCDA")
x<-additiveValueFunctionElicitation(performanceTable, criteriaMinMax, epsilon,
alternativesRanks = alternativesRanks)
library(MCDA)
epsilon <-0.01
epsilon <-0.01
t = read.table("Dane.csv", header = TRUE, sep = ",")
# the performance table
performanceTable <- rbind(
c(24.3,100-25600,2499),
c(16.3,100-25600,1739),
c(10.2,160-51200,10199),
c(24.3,100-25600,1999),
c(16.0,200-25600,2499),
c(24.3,100-25600,4999),
c(16.0,200-25600,3849),
c(16.0,200-25600,2449),
c(24.2,100-51200,4399),
c(18.84,100-25600,1699),
c(16.0,200-25600,2499),
c(24.3,100-25600,3495)
)
rownames(performanceTable) <- c(
"Sony Alpha a6000 (ILCE-6000LB)",
"Fujifilm X-A10",
"Panasonic DC-GH5S",
"Sony Alpha a5100 (ILCE-5100L)",
"Panasonic Lumix DMC-G7 14-42",
"Sony Alpha a7 II (ILCE-7M2)",
"Panasonic Lumix DMC-G80",
"Panasonic Lumix DMC-GX80",
"Sony Alpha a6300 (ILCE-6300L)",
"Panasonic Lumix DMC-GX800K",
"Panasonic Lumix DMC-G7",
"Sony Alpha a7K - ILCE-7K"
)
colnames(performanceTable) <- c(
"Resolution",
"RangeSensitivity",
"Price"
)
# ranks of the alternatives
alternativesRanks <- c(1,2,3,4,5,6,7,8,9,10,11,12)
names(alternativesRanks) <- row.names(performanceTable)
# criteria to minimize or maximize
criteriaMinMax <- c("max","max","min")
names(criteriaMinMax) <- colnames(performanceTable)
library(MCDA)
x<-additiveValueFunctionElicitation(performanceTable, criteriaMinMax, epsilon, alternativesRanks = alternativesRanks)
epsilon <-0.01
t = read.table("Dane.csv", header = TRUE, sep = ",")
# the performance table
performanceTable <- rbind(
t
)
rownames(performanceTable) <- c(
"Sony Alpha a6000 (ILCE-6000LB)",
"Fujifilm X-A10",
"Panasonic DC-GH5S",
"Sony Alpha a5100 (ILCE-5100L)",
"Panasonic Lumix DMC-G7 14-42",
"Sony Alpha a7 II (ILCE-7M2)",
"Panasonic Lumix DMC-G80",
"Panasonic Lumix DMC-GX80",
"Sony Alpha a6300 (ILCE-6300L)",
"Panasonic Lumix DMC-GX800K",
"Panasonic Lumix DMC-G7",
"Sony Alpha a7K - ILCE-7K"
)
colnames(performanceTable) <- c(
"Resolution",
"RangeSensitivity",
"Price"
)
# ranks of the alternatives
alternativesRanks <- c(1,2,3,4,5,6,7,8,9,10,11,12)
names(alternativesRanks) <- row.names(performanceTable)
# criteria to minimize or maximize
criteriaMinMax <- c("max","max","min")
names(criteriaMinMax) <- colnames(performanceTable)
library(MCDA)
x<-additiveValueFunctionElicitation(performanceTable, criteriaMinMax, epsilon, alternativesRanks = alternativesRanks)
# the performance table
performanceTable <- rbind(
c(24.3,100-25600,2499),
c(16.3,100-25600,1739),
c(10.2,160-51200,10199),
c(24.3,100-25600,1999),
c(16.0,200-25600,2499),
c(24.3,100-25600,4999),
c(16.0,200-25600,3849),
c(16.0,200-25600,2449),
c(24.2,100-51200,4399),
c(18.84,100-25600,1699),
c(16.0,200-25600,2499),
c(24.3,100-25600,3495)
)
epsilon <-0.01
t = read.table("Dane.csv", header = TRUE, sep = ",")
# the performance table
performanceTable <- rbind(
c(24.3,100-25600,2499),
c(16.3,100-25600,1739),
c(10.2,160-51200,10199),
c(24.3,100-25600,1999),
c(16.0,200-25600,2499),
c(24.3,100-25600,4999),
c(16.0,200-25600,3849),
c(16.0,200-25600,2449),
c(24.2,100-51200,4399),
c(18.84,100-25600,1699),
c(16.0,200-25600,2499),
c(24.3,100-25600,3495)
)
rownames(performanceTable) <- c(
"Sony Alpha a6000 (ILCE-6000LB)",
"Fujifilm X-A10",
"Panasonic DC-GH5S",
"Sony Alpha a5100 (ILCE-5100L)",
"Panasonic Lumix DMC-G7 14-42",
"Sony Alpha a7 II (ILCE-7M2)",
"Panasonic Lumix DMC-G80",
"Panasonic Lumix DMC-GX80",
"Sony Alpha a6300 (ILCE-6300L)",
"Panasonic Lumix DMC-GX800K",
"Panasonic Lumix DMC-G7",
"Sony Alpha a7K - ILCE-7K"
)
colnames(performanceTable) <- c(
"Resolution",
"RangeSensitivity",
"Price"
)
# ranks of the alternatives
alternativesRanks <- c(1,2,3,4,5,6,7,8,9,10,11,12)
names(alternativesRanks) <- row.names(performanceTable)
# criteria to minimize or maximize
criteriaMinMax <- c("max","max","min")
names(criteriaMinMax) <- colnames(performanceTable)
library(MCDA)
x<-additiveValueFunctionElicitation(performanceTable, criteriaMinMax, epsilon, alternativesRanks = alternativesRanks)
epsilon <-0.01
t = read.table("Dane.csv", header = TRUE, sep = ",")
# the performance table
performanceTable <- rbind(
t
)
rownames(performanceTable) <- c(
"Sony Alpha a6000 (ILCE-6000LB)",
"Fujifilm X-A10",
"Panasonic DC-GH5S",
"Sony Alpha a5100 (ILCE-5100L)",
"Panasonic Lumix DMC-G7 14-42",
"Sony Alpha a7 II (ILCE-7M2)",
"Panasonic Lumix DMC-G80",
"Panasonic Lumix DMC-GX80",
"Sony Alpha a6300 (ILCE-6300L)",
"Panasonic Lumix DMC-GX800K",
"Panasonic Lumix DMC-G7",
"Sony Alpha a7K - ILCE-7K"
)
colnames(performanceTable) <- c(
"Resolution",
"RangeSensitivity",
"Price"
)
# ranks of the alternatives
alternativesRanks <- c(1,2,3,4,5,6,7,8,9,10,11,12)
names(alternativesRanks) <- row.names(performanceTable)
# criteria to minimize or maximize
criteriaMinMax <- c("max","max","min")
names(criteriaMinMax) <- colnames(performanceTable)
library(MCDA)
x<-additiveValueFunctionElicitation(performanceTable, criteriaMinMax, epsilon, alternativesRanks = alternativesRanks)
names(criteriaMinMax) <- colnames(t)
epsilon <-0.01
t = read.table("Dane.csv", header = TRUE, sep = ",")
# the performance table
performanceTable <- rbind(
t
)
rownames(performanceTable) <- c(
"Sony Alpha a6000 (ILCE-6000LB)",
"Fujifilm X-A10",
"Panasonic DC-GH5S",
"Sony Alpha a5100 (ILCE-5100L)",
"Panasonic Lumix DMC-G7 14-42",
"Sony Alpha a7 II (ILCE-7M2)",
"Panasonic Lumix DMC-G80",
"Panasonic Lumix DMC-GX80",
"Sony Alpha a6300 (ILCE-6300L)",
"Panasonic Lumix DMC-GX800K",
"Panasonic Lumix DMC-G7",
"Sony Alpha a7K - ILCE-7K"
)
colnames(performanceTable) <- c(
"Resolution",
"RangeSensitivity",
"Price"
)
# ranks of the alternatives
alternativesRanks <- c(1,2,3,4,5,6,7,8,9,10,11,12)
names(alternativesRanks) <- row.names(t)
# criteria to minimize or maximize
criteriaMinMax <- c("max","max","min")
names(criteriaMinMax) <- colnames(t)
library(MCDA)
x<-additiveValueFunctionElicitation(performanceTable, criteriaMinMax, epsilon, alternativesRanks = alternativesRanks)
epsilon <-0.01
t = read.table("Dane.csv", header = TRUE, sep = ",")
# the performance table
performanceTable <- rbind(
c(24.3,100-25600,2499),
c(16.3,100-25600,1739),
c(10.2,160-51200,10199),
c(24.3,100-25600,1999),
c(16.0,200-25600,2499),
c(24.3,100-25600,4999),
c(16.0,200-25600,3849),
c(16.0,200-25600,2449),
c(24.2,100-51200,4399),
c(18.84,100-25600,1699),
c(16.0,200-25600,2499),
c(24.3,100-25600,3495)
)
rownames(performanceTable) <- c(
"Sony Alpha a6000 (ILCE-6000LB)",
"Fujifilm X-A10",
"Panasonic DC-GH5S",
"Sony Alpha a5100 (ILCE-5100L)",
"Panasonic Lumix DMC-G7 14-42",
"Sony Alpha a7 II (ILCE-7M2)",
"Panasonic Lumix DMC-G80",
"Panasonic Lumix DMC-GX80",
"Sony Alpha a6300 (ILCE-6300L)",
"Panasonic Lumix DMC-GX800K",
"Panasonic Lumix DMC-G7",
"Sony Alpha a7K - ILCE-7K"
)
colnames(performanceTable) <- c(
"Resolution",
"RangeSensitivity",
"Price"
)
# ranks of the alternatives
alternativesRanks <- c(1,2,3,4,5,6,7,8,9,10,11,12)
names(alternativesRanks) <- row.names(performanceTable)
# criteria to minimize or maximize
criteriaMinMax <- c("max","max","min")
names(criteriaMinMax) <- colnames(performanceTable)
library(MCDA)
x<-additiveValueFunctionElicitation(performanceTable, criteriaMinMax, epsilon, alternativesRanks = alternativesRanks)
View(t)
View(x)
epsilon <-0.01
t = read.table("Dane.csv", header = TRUE, sep = ",")
# the performance table
performanceTable <- rbind(
c(24.3,100-25600,2499),
c(16.3,100-25600,1739),
c(10.2,160-51200,10199),
c(24.3,100-25600,1999),
c(16.0,200-25600,2499),
c(24.3,100-25600,4999),
c(16.0,200-25600,3849),
c(16.0,200-25600,2449),
c(24.2,100-51200,4399),
c(18.84,100-25600,1699),
c(16.0,200-25600,2499),
c(24.3,100-25600,3495)
)
rownames(performanceTable) <- c(
"Sony Alpha a6000 (ILCE-6000LB)",
"Fujifilm X-A10",
"Panasonic DC-GH5S",
"Sony Alpha a5100 (ILCE-5100L)",
"Panasonic Lumix DMC-G7 14-42",
"Sony Alpha a7 II (ILCE-7M2)",
"Panasonic Lumix DMC-G80",
"Panasonic Lumix DMC-GX80",
"Sony Alpha a6300 (ILCE-6300L)",
"Panasonic Lumix DMC-GX800K",
"Panasonic Lumix DMC-G7",
"Sony Alpha a7K - ILCE-7K"
)
colnames(performanceTable) <- c(
"Resolution",
"RangeSensitivity",
"Price"
)
# ranks of the alternatives
alternativesRanks <- c(1,2,3,4,5,6,7,8,9,10,11,12)
names(alternativesRanks) <- row.names(performanceTable)
# criteria to minimize or maximize
criteriaMinMax <- c("max","max","min")
names(criteriaMinMax) <- colnames(performanceTable)
library(MCDA)
x<-additiveValueFunctionElicitation(performanceTable, criteriaMinMax, epsilon, alternativesRanks = alternativesRanks)
